//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IERealty.IERealtyBookingService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppointmentModel", Namespace="http://schemas.datacontract.org/2004/07/IERealtyDatabases.Models")]
    [System.SerializableAttribute()]
    public partial class AppointmentModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblCustomerAppointment CustomerAppointmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RealtorAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RealtorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RealtorPhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentName {
            get {
                return this.AgentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentNameField, value) != true)) {
                    this.AgentNameField = value;
                    this.RaisePropertyChanged("AgentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblCustomerAppointment CustomerAppointment {
            get {
                return this.CustomerAppointmentField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerAppointmentField, value) != true)) {
                    this.CustomerAppointmentField = value;
                    this.RaisePropertyChanged("CustomerAppointment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RealtorAddress {
            get {
                return this.RealtorAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.RealtorAddressField, value) != true)) {
                    this.RealtorAddressField = value;
                    this.RaisePropertyChanged("RealtorAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RealtorName {
            get {
                return this.RealtorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RealtorNameField, value) != true)) {
                    this.RealtorNameField = value;
                    this.RaisePropertyChanged("RealtorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RealtorPhoneNumber {
            get {
                return this.RealtorPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RealtorPhoneNumberField, value) != true)) {
                    this.RealtorPhoneNumberField = value;
                    this.RaisePropertyChanged("RealtorPhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tblCustomerAppointment", Namespace="http://schemas.datacontract.org/2004/07/IERealtyDatabases.Databases.SqlServer")]
    [System.SerializableAttribute()]
    public partial class tblCustomerAppointment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AppointmentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan AppointmentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AvailableAgentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long DurationInMinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblAgentAvaialbleForAppointment tblAgentAvaialbleForAppointmentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AppointmentDate {
            get {
                return this.AppointmentDateField;
            }
            set {
                if ((this.AppointmentDateField.Equals(value) != true)) {
                    this.AppointmentDateField = value;
                    this.RaisePropertyChanged("AppointmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan AppointmentTime {
            get {
                return this.AppointmentTimeField;
            }
            set {
                if ((this.AppointmentTimeField.Equals(value) != true)) {
                    this.AppointmentTimeField = value;
                    this.RaisePropertyChanged("AppointmentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AvailableAgentId {
            get {
                return this.AvailableAgentIdField;
            }
            set {
                if ((this.AvailableAgentIdField.Equals(value) != true)) {
                    this.AvailableAgentIdField = value;
                    this.RaisePropertyChanged("AvailableAgentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long DurationInMinutes {
            get {
                return this.DurationInMinutesField;
            }
            set {
                if ((this.DurationInMinutesField.Equals(value) != true)) {
                    this.DurationInMinutesField = value;
                    this.RaisePropertyChanged("DurationInMinutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblAgentAvaialbleForAppointment tblAgentAvaialbleForAppointment {
            get {
                return this.tblAgentAvaialbleForAppointmentField;
            }
            set {
                if ((object.ReferenceEquals(this.tblAgentAvaialbleForAppointmentField, value) != true)) {
                    this.tblAgentAvaialbleForAppointmentField = value;
                    this.RaisePropertyChanged("tblAgentAvaialbleForAppointment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tblAgentAvaialbleForAppointment", Namespace="http://schemas.datacontract.org/2004/07/IERealtyDatabases.Databases.SqlServer")]
    [System.SerializableAttribute()]
    public partial class tblAgentAvaialbleForAppointment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AgentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblAgent tblAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblCustomerAppointment[] tblCustomerAppointmentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AgentId {
            get {
                return this.AgentIdField;
            }
            set {
                if ((this.AgentIdField.Equals(value) != true)) {
                    this.AgentIdField = value;
                    this.RaisePropertyChanged("AgentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblAgent tblAgent {
            get {
                return this.tblAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.tblAgentField, value) != true)) {
                    this.tblAgentField = value;
                    this.RaisePropertyChanged("tblAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblCustomerAppointment[] tblCustomerAppointments {
            get {
                return this.tblCustomerAppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.tblCustomerAppointmentsField, value) != true)) {
                    this.tblCustomerAppointmentsField = value;
                    this.RaisePropertyChanged("tblCustomerAppointments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tblAgent", Namespace="http://schemas.datacontract.org/2004/07/IERealtyDatabases.Databases.SqlServer")]
    [System.SerializableAttribute()]
    public partial class tblAgent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AddressIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblAddress tblAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblAgentAvaialbleForAppointment[] tblAgentAvaialbleForAppointmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblBrokerAgent[] tblBrokerAgentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AddressId {
            get {
                return this.AddressIdField;
            }
            set {
                if ((this.AddressIdField.Equals(value) != true)) {
                    this.AddressIdField = value;
                    this.RaisePropertyChanged("AddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblAddress tblAddress {
            get {
                return this.tblAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.tblAddressField, value) != true)) {
                    this.tblAddressField = value;
                    this.RaisePropertyChanged("tblAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblAgentAvaialbleForAppointment[] tblAgentAvaialbleForAppointments {
            get {
                return this.tblAgentAvaialbleForAppointmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.tblAgentAvaialbleForAppointmentsField, value) != true)) {
                    this.tblAgentAvaialbleForAppointmentsField = value;
                    this.RaisePropertyChanged("tblAgentAvaialbleForAppointments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblBrokerAgent[] tblBrokerAgents {
            get {
                return this.tblBrokerAgentsField;
            }
            set {
                if ((object.ReferenceEquals(this.tblBrokerAgentsField, value) != true)) {
                    this.tblBrokerAgentsField = value;
                    this.RaisePropertyChanged("tblBrokerAgents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tblAddress", Namespace="http://schemas.datacontract.org/2004/07/IERealtyDatabases.Databases.SqlServer")]
    [System.SerializableAttribute()]
    public partial class tblAddress : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblAgent[] tblAgentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblBroker[] tblBrokersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblAgent[] tblAgents {
            get {
                return this.tblAgentsField;
            }
            set {
                if ((object.ReferenceEquals(this.tblAgentsField, value) != true)) {
                    this.tblAgentsField = value;
                    this.RaisePropertyChanged("tblAgents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblBroker[] tblBrokers {
            get {
                return this.tblBrokersField;
            }
            set {
                if ((object.ReferenceEquals(this.tblBrokersField, value) != true)) {
                    this.tblBrokersField = value;
                    this.RaisePropertyChanged("tblBrokers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tblBrokerAgent", Namespace="http://schemas.datacontract.org/2004/07/IERealtyDatabases.Databases.SqlServer")]
    [System.SerializableAttribute()]
    public partial class tblBrokerAgent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AgentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BrokerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblAgent tblAgentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblBroker tblBrokerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AgentId {
            get {
                return this.AgentIdField;
            }
            set {
                if ((this.AgentIdField.Equals(value) != true)) {
                    this.AgentIdField = value;
                    this.RaisePropertyChanged("AgentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BrokerId {
            get {
                return this.BrokerIdField;
            }
            set {
                if ((this.BrokerIdField.Equals(value) != true)) {
                    this.BrokerIdField = value;
                    this.RaisePropertyChanged("BrokerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblAgent tblAgent {
            get {
                return this.tblAgentField;
            }
            set {
                if ((object.ReferenceEquals(this.tblAgentField, value) != true)) {
                    this.tblAgentField = value;
                    this.RaisePropertyChanged("tblAgent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblBroker tblBroker {
            get {
                return this.tblBrokerField;
            }
            set {
                if ((object.ReferenceEquals(this.tblBrokerField, value) != true)) {
                    this.tblBrokerField = value;
                    this.RaisePropertyChanged("tblBroker");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="tblBroker", Namespace="http://schemas.datacontract.org/2004/07/IERealtyDatabases.Databases.SqlServer")]
    [System.SerializableAttribute()]
    public partial class tblBroker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long AddressIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblAddress tblAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private IERealty.IERealtyBookingService.tblBrokerAgent[] tblBrokerAgentsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long AddressId {
            get {
                return this.AddressIdField;
            }
            set {
                if ((this.AddressIdField.Equals(value) != true)) {
                    this.AddressIdField = value;
                    this.RaisePropertyChanged("AddressId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblAddress tblAddress {
            get {
                return this.tblAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.tblAddressField, value) != true)) {
                    this.tblAddressField = value;
                    this.RaisePropertyChanged("tblAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public IERealty.IERealtyBookingService.tblBrokerAgent[] tblBrokerAgents {
            get {
                return this.tblBrokerAgentsField;
            }
            set {
                if ((object.ReferenceEquals(this.tblBrokerAgentsField, value) != true)) {
                    this.tblBrokerAgentsField = value;
                    this.RaisePropertyChanged("tblBrokerAgents");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="IERealtyBookingService.IBooking")]
    public interface IBooking {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooking/BookAppointment", ReplyAction="http://tempuri.org/IBooking/BookAppointmentResponse")]
        bool BookAppointment(IERealty.IERealtyBookingService.AppointmentModel appointmentModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooking/BookAppointment", ReplyAction="http://tempuri.org/IBooking/BookAppointmentResponse")]
        System.Threading.Tasks.Task<bool> BookAppointmentAsync(IERealty.IERealtyBookingService.AppointmentModel appointmentModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooking/GetNewAppointmentDetails", ReplyAction="http://tempuri.org/IBooking/GetNewAppointmentDetailsResponse")]
        IERealty.IERealtyBookingService.AppointmentModel GetNewAppointmentDetails();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBooking/GetNewAppointmentDetails", ReplyAction="http://tempuri.org/IBooking/GetNewAppointmentDetailsResponse")]
        System.Threading.Tasks.Task<IERealty.IERealtyBookingService.AppointmentModel> GetNewAppointmentDetailsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookingChannel : IERealty.IERealtyBookingService.IBooking, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookingClient : System.ServiceModel.ClientBase<IERealty.IERealtyBookingService.IBooking>, IERealty.IERealtyBookingService.IBooking {
        
        public BookingClient() {
        }
        
        public BookingClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookingClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool BookAppointment(IERealty.IERealtyBookingService.AppointmentModel appointmentModel) {
            return base.Channel.BookAppointment(appointmentModel);
        }
        
        public System.Threading.Tasks.Task<bool> BookAppointmentAsync(IERealty.IERealtyBookingService.AppointmentModel appointmentModel) {
            return base.Channel.BookAppointmentAsync(appointmentModel);
        }
        
        public IERealty.IERealtyBookingService.AppointmentModel GetNewAppointmentDetails() {
            return base.Channel.GetNewAppointmentDetails();
        }
        
        public System.Threading.Tasks.Task<IERealty.IERealtyBookingService.AppointmentModel> GetNewAppointmentDetailsAsync() {
            return base.Channel.GetNewAppointmentDetailsAsync();
        }
    }
}
